// <auto-generated />
using System;
using CaChepCosmeticMVC2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaChepCosmeticMVC2.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191202134013_ver2")]
    partial class ver2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.CapBacThe", b =>
                {
                    b.Property<int>("CapBacTheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuyenLoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCapBac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TienToiThieu")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CapBacTheId");

                    b.ToTable("CapBacThes");

                    b.HasData(
                        new
                        {
                            CapBacTheId = 1,
                            QuyenLoi = "Giam 5% tổng hóa đơn",
                            TenCapBac = "Vip1",
                            TienToiThieu = 1000000m
                        },
                        new
                        {
                            CapBacTheId = 2,
                            QuyenLoi = "Giam 10% tổng hóa đơn",
                            TenCapBac = "Vip2",
                            TienToiThieu = 2000000m
                        },
                        new
                        {
                            CapBacTheId = 3,
                            QuyenLoi = "Giam 15% tổng hóa đơn",
                            TenCapBac = "Vip3",
                            TienToiThieu = 5000000m
                        },
                        new
                        {
                            CapBacTheId = 4,
                            QuyenLoi = "Giam 0% tổng hóa đơn",
                            TenCapBac = "Thành viên mới",
                            TienToiThieu = 0m
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.ChiTietHoaDon", b =>
                {
                    b.Property<int>("HoaDonId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HoaDonId", "SanPhamId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietHoaDons");

                    b.HasData(
                        new
                        {
                            HoaDonId = 1,
                            SanPhamId = 1,
                            GiaBan = 150000m,
                            SoLuong = 5,
                            ThanhTien = 750000m
                        },
                        new
                        {
                            HoaDonId = 1,
                            SanPhamId = 2,
                            GiaBan = 130000m,
                            SoLuong = 5,
                            ThanhTien = 650000m
                        },
                        new
                        {
                            HoaDonId = 2,
                            SanPhamId = 1,
                            GiaBan = 150000m,
                            SoLuong = 2,
                            ThanhTien = 300000m
                        },
                        new
                        {
                            HoaDonId = 2,
                            SanPhamId = 2,
                            GiaBan = 130000m,
                            SoLuong = 5,
                            ThanhTien = 650000m
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.ChiTieu", b =>
                {
                    b.Property<int>("ChiTieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("ChiTieuId");

                    b.ToTable("ChiTieus");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.DanhMucSanPham", b =>
                {
                    b.Property<int>("DanhMucSanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDanhMucSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DanhMucSanPhamId");

                    b.ToTable("DanhMucSanPhams");

                    b.HasData(
                        new
                        {
                            DanhMucSanPhamId = 1,
                            TenDanhMucSanPham = "Trang Điểm"
                        },
                        new
                        {
                            DanhMucSanPhamId = 2,
                            TenDanhMucSanPham = "Chăm Sóc Da Mặt"
                        },
                        new
                        {
                            DanhMucSanPhamId = 3,
                            TenDanhMucSanPham = "Chăm Sóc Cơ Thể"
                        },
                        new
                        {
                            DanhMucSanPhamId = 4,
                            TenDanhMucSanPham = "Chăm Tóc Và Da Đầu"
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.HoaDon", b =>
                {
                    b.Property<int>("HoaDonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AccoutId")
                        .HasColumnType("int");

                    b.Property<string>("MaGiamGiaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TheTvienId")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HoaDonId");

                    b.HasIndex("AccountBanId");

                    b.HasIndex("MaGiamGiaId");

                    b.HasIndex("TheTvienId");

                    b.ToTable("HoaDons");

                    b.HasData(
                        new
                        {
                            HoaDonId = 1,
                            MaGiamGiaId = "VIP2",
                            NgayLap = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TheTvienId = 1,
                            TongTien = 1260000m
                        },
                        new
                        {
                            HoaDonId = 2,
                            NgayLap = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TongTien = 950000m
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.KhachHang", b =>
                {
                    b.Property<int>("KhachHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sdt")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KhachHangId");

                    b.ToTable("KhachHangs");

                    b.HasData(
                        new
                        {
                            KhachHangId = 1,
                            Email = "phuocnglt@gmail.com",
                            NgaySinh = new DateTime(1999, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = 937536545,
                            TenKhachHang = "Nguyễn Duy Phước"
                        },
                        new
                        {
                            KhachHangId = 2,
                            Email = "nglt@gmail.com",
                            NgaySinh = new DateTime(1997, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = 937536545,
                            TenKhachHang = "Nguyễn T"
                        },
                        new
                        {
                            KhachHangId = 3,
                            Email = "phantuyen@gmail.com",
                            NgaySinh = new DateTime(1997, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = 1626364802,
                            TenKhachHang = "Phan Thị Ngọc Tuyền"
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.LoaiSanPham", b =>
                {
                    b.Property<int>("LoaiSanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhMucSanPhamId")
                        .HasColumnType("int");

                    b.Property<string>("TenLoaiSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiSanPhamId");

                    b.HasIndex("DanhMucSanPhamId");

                    b.ToTable("LoaiSanPhams");

                    b.HasData(
                        new
                        {
                            LoaiSanPhamId = 1,
                            DanhMucSanPhamId = 1,
                            TenLoaiSanPham = "Trang Điểm Mặt"
                        },
                        new
                        {
                            LoaiSanPhamId = 2,
                            DanhMucSanPhamId = 1,
                            TenLoaiSanPham = "Trang Điểm Mắt"
                        },
                        new
                        {
                            LoaiSanPhamId = 3,
                            DanhMucSanPhamId = 1,
                            TenLoaiSanPham = "Trang Điểm Môi"
                        },
                        new
                        {
                            LoaiSanPhamId = 4,
                            DanhMucSanPhamId = 1,
                            TenLoaiSanPham = "Trang Điểm"
                        },
                        new
                        {
                            LoaiSanPhamId = 5,
                            DanhMucSanPhamId = 2,
                            TenLoaiSanPham = "Xịt Khoáng"
                        },
                        new
                        {
                            LoaiSanPhamId = 6,
                            DanhMucSanPhamId = 2,
                            TenLoaiSanPham = "Nước Hoa Hông, Toner"
                        },
                        new
                        {
                            LoaiSanPhamId = 7,
                            DanhMucSanPhamId = 2,
                            TenLoaiSanPham = "Làm Sạch Da Mặt"
                        },
                        new
                        {
                            LoaiSanPhamId = 8,
                            DanhMucSanPhamId = 2,
                            TenLoaiSanPham = "Sản Phẩm Trị Mụn"
                        },
                        new
                        {
                            LoaiSanPhamId = 9,
                            DanhMucSanPhamId = 3,
                            TenLoaiSanPham = "Sữa tắm, xà bông, muối tắm"
                        },
                        new
                        {
                            LoaiSanPhamId = 10,
                            DanhMucSanPhamId = 3,
                            TenLoaiSanPham = "Dưỡng thể"
                        },
                        new
                        {
                            LoaiSanPhamId = 11,
                            DanhMucSanPhamId = 4,
                            TenLoaiSanPham = "Dầu Gội, Dầu Xả"
                        },
                        new
                        {
                            LoaiSanPhamId = 12,
                            DanhMucSanPhamId = 4,
                            TenLoaiSanPham = "Dưỡng tóc, ủ tóc"
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.MaGiamGia", b =>
                {
                    b.Property<string>("MaGiamGiaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DieuKienApDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenChuongTrinh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaGiamGiaId");

                    b.ToTable("MaGiamGias");

                    b.HasData(
                        new
                        {
                            MaGiamGiaId = "VIP1",
                            DieuKienApDung = "có thẻ Vip 1",
                            NgayBatDau = new DateTime(2015, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2099, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenChuongTrinh = "Ưu đãi 5% dành cho vip 1"
                        },
                        new
                        {
                            MaGiamGiaId = "VIP2",
                            DieuKienApDung = "có thẻ Vip 2",
                            NgayBatDau = new DateTime(2015, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2099, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenChuongTrinh = "Ưu đãi 10% dành cho vip 2"
                        },
                        new
                        {
                            MaGiamGiaId = "VIP3",
                            DieuKienApDung = "có thẻ Vip 2",
                            NgayBatDau = new DateTime(2015, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2099, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenChuongTrinh = "Ưu đãi 15% dành cho vip 3"
                        },
                        new
                        {
                            MaGiamGiaId = "MGG001",
                            DieuKienApDung = "Tổng hóa đơn >= 100.000đ",
                            NgayBatDau = new DateTime(2019, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2019, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenChuongTrinh = "Black Friday"
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.NhanVien", b =>
                {
                    b.Property<int>("NhanVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AccoutId")
                        .HasColumnType("int");

                    b.Property<string>("Cmnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Luong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("NgayLam")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NhanVienId");

                    b.HasIndex("AccountBanId");

                    b.ToTable("NhanViens");

                    b.HasData(
                        new
                        {
                            NhanVienId = 1,
                            Cmnd = "281212912",
                            Luong = 100000000m,
                            NgayLam = new DateTime(2019, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgaySinh = new DateTime(1999, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = "01626364802",
                            TenNv = "Phan Thị Ngọc Tuyền"
                        },
                        new
                        {
                            NhanVienId = 2,
                            Cmnd = "281212910",
                            Luong = 200000000m,
                            NgayLam = new DateTime(2019, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgaySinh = new DateTime(1998, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = "0937536545",
                            TenNv = "Nguyễn Duy Phước"
                        },
                        new
                        {
                            NhanVienId = 3,
                            Cmnd = "281212982",
                            NgayLam = new DateTime(2019, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgaySinh = new DateTime(1997, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Sdt = "01626364802",
                            TenNv = "Phan A"
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.SanPham", b =>
                {
                    b.Property<int>("SanPhamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoaiSanPhamId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThuongHieuId")
                        .HasColumnType("int");

                    b.HasKey("SanPhamId");

                    b.HasIndex("LoaiSanPhamId");

                    b.HasIndex("ThuongHieuId");

                    b.ToTable("SanPhams");

                    b.HasData(
                        new
                        {
                            SanPhamId = 1,
                            GiaBan = 150000m,
                            Hinh = "1",
                            LoaiSanPhamId = 1,
                            TenSanPham = "Kem tạo khối Bbia Last Contouring",
                            ThuongHieuId = 1
                        },
                        new
                        {
                            SanPhamId = 2,
                            GiaBan = 130000m,
                            Hinh = "2",
                            LoaiSanPhamId = 1,
                            TenSanPham = "Che khuyết điểm Bbia Last Concealer 6.2g",
                            ThuongHieuId = 1
                        },
                        new
                        {
                            SanPhamId = 3,
                            GiaBan = 150000m,
                            Hinh = "3",
                            LoaiSanPhamId = 2,
                            TenSanPham = "Kẻ mắt nước Bbia Last Pen Eyeliner 0.6g ",
                            ThuongHieuId = 1
                        },
                        new
                        {
                            SanPhamId = 4,
                            GiaBan = 170000m,
                            Hinh = "4",
                            LoaiSanPhamId = 11,
                            TenSanPham = "Dầu Gội Sạch Gàu Clear Botanique 9 Thảo Dược.",
                            ThuongHieuId = 2
                        },
                        new
                        {
                            SanPhamId = 5,
                            GiaBan = 169000m,
                            Hinh = "5",
                            LoaiSanPhamId = 11,
                            TenSanPham = "Dầu Gội Sạch Gàu CLEAR Mát Lạnh Bạc Hà",
                            ThuongHieuId = 2
                        },
                        new
                        {
                            SanPhamId = 6,
                            GiaBan = 150000m,
                            Hinh = "6",
                            LoaiSanPhamId = 9,
                            TenSanPham = "Combo Sữa Tắm L'amont En Provence Cherry"
                        },
                        new
                        {
                            SanPhamId = 7,
                            GiaBan = 150000m,
                            Hinh = "7",
                            LoaiSanPhamId = 9,
                            TenSanPham = "Sữa Tắm St.Ives Muối Biển 400ml"
                        },
                        new
                        {
                            SanPhamId = 8,
                            GiaBan = 118000m,
                            Hinh = "8",
                            LoaiSanPhamId = 8,
                            TenSanPham = "Combo 4 Vedette Dưỡng Da Ngừa Mụn Hiệu Quả"
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.TheThanhVien", b =>
                {
                    b.Property<int>("TheTvienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CapbacTheId")
                        .HasColumnType("int");

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Ngaylap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongChiTieu")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TheTvienId");

                    b.HasIndex("CapbacTheId");

                    b.HasIndex("KhachHangId")
                        .IsUnique()
                        .HasFilter("[KhachHangId] IS NOT NULL");

                    b.ToTable("TheThanhViens");

                    b.HasData(
                        new
                        {
                            TheTvienId = 1,
                            CapbacTheId = 2,
                            KhachHangId = 1,
                            Ngaylap = new DateTime(2018, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TongChiTieu = 2000000m
                        },
                        new
                        {
                            TheTvienId = 2,
                            CapbacTheId = 3,
                            KhachHangId = 2,
                            Ngaylap = new DateTime(2018, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TongChiTieu = 50000m
                        },
                        new
                        {
                            TheTvienId = 3,
                            CapbacTheId = 3,
                            Ngaylap = new DateTime(2018, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TongChiTieu = 20000m
                        });
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.Thu", b =>
                {
                    b.Property<int>("ThuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("ThuId");

                    b.ToTable("Thus");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.ThuongHieu", b =>
                {
                    b.Property<int>("ThuongHieuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenThuongHieu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ThuongHieuId");

                    b.ToTable("ThuongHieus");

                    b.HasData(
                        new
                        {
                            ThuongHieuId = 1,
                            TenThuongHieu = "Bbia Last"
                        },
                        new
                        {
                            ThuongHieuId = 2,
                            TenThuongHieu = "Clear"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.Account", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Account");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.ChiTietHoaDon", b =>
                {
                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDon")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDon")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.HoaDon", b =>
                {
                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.Account", "AccountBan")
                        .WithMany()
                        .HasForeignKey("AccountBanId");

                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.MaGiamGia", "MaGiamGiaNavigation")
                        .WithMany("HoaDon")
                        .HasForeignKey("MaGiamGiaId");

                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.TheThanhVien", "TheTvien")
                        .WithMany("HoaDon")
                        .HasForeignKey("TheTvienId");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.LoaiSanPham", b =>
                {
                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.DanhMucSanPham", "DanhMucSanPham")
                        .WithMany("LoaiSanPhams")
                        .HasForeignKey("DanhMucSanPhamId");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.NhanVien", b =>
                {
                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.Account", "AccountBan")
                        .WithMany()
                        .HasForeignKey("AccountBanId");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.SanPham", b =>
                {
                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPham")
                        .HasForeignKey("LoaiSanPhamId");

                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPham")
                        .HasForeignKey("ThuongHieuId");
                });

            modelBuilder.Entity("CaChepCosmeticMVC2.Models.DataModels.TheThanhVien", b =>
                {
                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.CapBacThe", "CapbacThe")
                        .WithMany("TheThanhVien")
                        .HasForeignKey("CapbacTheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaChepCosmeticMVC2.Models.DataModels.KhachHang", "KhachHang")
                        .WithOne("TheTvien")
                        .HasForeignKey("CaChepCosmeticMVC2.Models.DataModels.TheThanhVien", "KhachHangId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
